<?php

namespace AdminBundle\Repository;

use Doctrine\ORM\Query;
use AdminBundle\Entity\Category;

/**
 * PromotionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PromotionRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param Category $category
     *
     * @return int
     */
    public function fetchBiggestGeneralPromotion()
    {
        $qb = $this->createQueryBuilder('p');

        $today = new \DateTime();

        $qb->select('p.percent')
            ->where($qb->expr()->lte('p.startDate', ':today'))
            ->andWhere($qb->expr()->gte('p.endDate', ':today'))
            ->andWhere($qb->expr()->isNull('p.categories'))
            ->andWhere($qb->expr()->isNull('p.products'))
            ->setParameter(':today', $today->format('Y-m-d'))
            ->orderBy('p.percent', 'DESC')
            ->setMaxResults(1);



        $query = $qb->getQuery();

        if($query->getOneOrNullResult() !== null){
            return $query->getSingleScalarResult();
        }
        return 0;
    }


    /**
     *
     */
    public function fetchCategoriesPromotions()
    {
        $qb = $this->createQueryBuilder('p');

        $today = new \DateTime();

        $qb->select(['MAX(p.percent) as percent','c.id'])
            ->join('p.categories', 'c')
            ->where($qb->expr()->lte('p.startDate', ':today'))
            ->andWhere($qb->expr()->gte('p.endDate', ':today'))
            ->andWhere($qb->expr()->isNotNull('p.categories'))
            ->setParameter(':today', $today->format('Y-m-d'))
            ->groupBy('c')
            ->orderBy('p.percent', 'DESC');

        $results  = $qb->getQuery()->getResult();

        $promotions = [];
        foreach ($results as $promotion) {
            $promotions[(int)$promotion['id']] = (int)$promotion['percent'];
        }
        return $promotions;
    }


    /**
     *
     */
    public function fetchProductsPromotions()
    {
        $qb = $this->createQueryBuilder('p');

        $today = new \DateTime();

        $qb->select(['MAX(p.percent) as percent','pr.id'])
            ->join('p.products', 'pr')
            ->where($qb->expr()->lte('p.startDate', ':today'))
            ->andWhere($qb->expr()->gte('p.endDate', ':today'))
            ->andWhere($qb->expr()->isNotNull('p.products'))
            ->setParameter(':today', $today->format('Y-m-d'))
            ->groupBy('pr')
            ->orderBy('p.percent', 'DESC');

        $results  = $qb->getQuery()->getResult();

        $promotions = [];
        foreach ($results as $promotion) {
            $promotions[(int)$promotion['id']] = (int)$promotion['percent'];
        }
        return $promotions;
    }



}
